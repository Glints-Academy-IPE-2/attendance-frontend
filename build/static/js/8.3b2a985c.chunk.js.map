{"version":3,"sources":["../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","services/auth.header.js","services/user.services.js","views/role/admin/approve/ApproveUsers.js"],"names":["_slicedToArray","arr","i","Array","isArray","Symbol","iterator","Object","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","value","length","err","unsupportedIterableToArray","TypeError","authHeader","user","JSON","parse","localStorage","getItem","token","axios","require","API_URL","UserServices","getAllUsers","get","headers","approveUser","verifiedToken","deleteUser","id","delete","fields","ApproveUsers","useState","notApprovedUsers","setNotApprovedUsers","modal","setModal","modalType","setModalType","modalMessage","setModalMessage","modalButton","setModalButton","setToken","alertType","setAlertType","alertMessage","setAlertMessage","isLoading","setIsLoading","getAlluser","then","res","filteredUsers","data","users","rows","filter","isApproved","modalHandler","type","useEffect","color","style","backgroundColor","fontWeight","borderRadius","marginTop","closeButton","items","bordered","itemsPerPage","pagination","scopedSlots","action","item","shape","size","className","onClick","show","onClose","console","log","catch"],"mappings":"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","file":"static/js/8.3b2a985c.chunk.js","sourcesContent":["import arrayWithHoles from \"@babel/runtime/helpers/esm/arrayWithHoles\";\nimport iterableToArrayLimit from \"@babel/runtime/helpers/esm/iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableRest from \"@babel/runtime/helpers/esm/nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","export default function authHeader() {\n  const user = JSON.parse(localStorage.getItem(\"user\"));\n\n  if (user && user.token) {\n    return { \"x-token\": user.token };\n  } else {\n    return {};\n  }\n}\n","import authHeader from \"./auth.header\";\nconst axios = require(\"axios\");\n\nconst API_URL = \"https://ipe-attendance.herokuapp.com/api/admin/\";\n\nconst getAllUsers = () => {\n  return axios.get(API_URL + \"get-user\", { headers: authHeader() });\n};\n\nconst approveUser = verifiedToken => {\n  return axios.get(API_URL + \"approve-user/\" + verifiedToken, {\n    headers: authHeader()\n  });\n};\n\nconst deleteUser = id => {\n  return axios.delete(API_URL + \"delete-user/\" + id, {\n    headers: authHeader()\n  });\n};\n\nconst UserServices = {\n  getAllUsers,\n  approveUser,\n  deleteUser\n};\n\nexport default UserServices;\n","import React, { useState, useEffect } from \"react\";\nimport {\n  CCard,\n  CCardBody,\n  CCardHeader,\n  CCol,\n  CDataTable,\n  CRow,\n  CButton,\n  CModal,\n  CModalBody,\n  CModalFooter,\n  CAlert,\n  CSpinner\n} from \"@coreui/react\";\n\nimport UserServices from \"../../../../services/user.services\";\nconst fields = [\"username\", \"email\", \"action\"];\n\nconst ApproveUsers = () => {\n  const [notApprovedUsers, setNotApprovedUsers] = useState(null);\n\n  const [modal, setModal] = useState(false);\n  const [modalType, setModalType] = useState(\"\");\n  const [modalMessage, setModalMessage] = useState(\"\");\n  const [modalButton, setModalButton] = useState(\"\");\n\n  const [token, setToken] = useState(\"\");\n\n  const [alertType, setAlertType] = useState(null);\n  const [alertMessage, setAlertMessage] = useState(null);\n\n  const [isLoading, setIsLoading] = useState(true);\n\n  const getAlluser = () => {\n    setIsLoading(false);\n    UserServices.getAllUsers().then(res => {\n      const users = res.data.data.users.rows;\n      const filteredUsers = users.filter(user => user.isApproved === false);\n      setNotApprovedUsers(filteredUsers);\n    });\n  };\n\n  const modalHandler = (type, verifiedToken) => {\n    setModal(!modal);\n    setModalType(type);\n    setToken(verifiedToken);\n\n    if (type === \"danger\") {\n      setModalMessage(\"Reject this user?\");\n      setModalButton(\"Reject\");\n    } else {\n      setModalMessage(\"Approve this user?\");\n      setModalButton(\"Approve\");\n    }\n  };\n\n  const approveRejectHandler = () => {\n    setModal(!modal);\n    if (modalType === \"danger\") {\n      console.log(\"hapus\");\n    } else {\n      UserServices.approveUser(token)\n        .then(res => {\n          console.log(res);\n          getAlluser();\n          setAlertType(\"success\");\n          setAlertMessage(\"Approve successfull\");\n        })\n        .catch(err => console.log(err));\n    }\n  };\n\n  useEffect(() => {\n    getAlluser();\n  }, []);\n\n  return (\n    <>\n      <CRow>\n        <CCol>\n          {isLoading && <CSpinner color=\"info\" />}\n          <CCard>\n            <CCardHeader\n              style={{\n                backgroundColor: \"#6C63FF\",\n                color: \"white\",\n                fontWeight: \"600\",\n                borderRadius: \"10px 10px 0 0\",\n                marginTop: \"-10px\"\n              }}\n            >\n              Approve Users\n            </CCardHeader>\n            <CCardBody>\n              {alertType && (\n                <CAlert color={alertType} closeButton>\n                  {alertMessage}\n                </CAlert>\n              )}\n              <CDataTable\n                items={notApprovedUsers}\n                fields={fields}\n                bordered\n                itemsPerPage={5}\n                pagination\n                scopedSlots={{\n                  action: item => (\n                    <td>\n                      <CButton\n                        shape=\"pill\"\n                        color=\"success\"\n                        size=\"sm\"\n                        className=\"mx-1 px-3\"\n                        onClick={() =>\n                          modalHandler(\"success\", item.verifiedToken)\n                        }\n                      >\n                        Approve\n                      </CButton>\n                      <CButton\n                        shape=\"pill\"\n                        color=\"danger\"\n                        size=\"sm\"\n                        className=\"mx-1 px-3\"\n                        onClick={() => modalHandler(\"danger\")}\n                      >\n                        Reject\n                      </CButton>\n                    </td>\n                  )\n                }}\n              />\n            </CCardBody>\n          </CCard>\n        </CCol>\n      </CRow>\n\n      {/* Modal */}\n      <CModal\n        size=\"sm\"\n        show={modal}\n        onClose={() => setModal(!modal)}\n        color={modalType}\n      >\n        <CModalBody className={`text-${modalType} text-center`}>\n          <h4>{modalMessage}</h4>\n        </CModalBody>\n        <CModalFooter>\n          <CButton color={modalType} onClick={approveRejectHandler}>\n            {modalButton}\n          </CButton>{\" \"}\n          <CButton color=\"secondary\" onClick={() => setModal(!modal)}>\n            Cancel\n          </CButton>\n        </CModalFooter>\n      </CModal>\n    </>\n  );\n};\n\nexport default ApproveUsers;\n"],"sourceRoot":""}