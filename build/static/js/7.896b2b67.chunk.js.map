{"version":3,"sources":["../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","views/data/Attendance.js","services/auth.header.js","services/user.services.js","views/role/admin/dashboard/DashboardAdmin.js"],"names":["_slicedToArray","arr","i","Array","isArray","Symbol","iterator","Object","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","value","length","err","unsupportedIterableToArray","TypeError","UserAttendanceData","id","checkIn","date","checkOut","workingHour","UsersAttendanceData","name","type","time","ApproveUsersData","email","authHeader","user","JSON","parse","localStorage","getItem","token","axios","require","API_URL","UserServices","getAllUsers","get","headers","approveUser","verifiedToken","deleteUser","delete","userFields","absentFields","DashboardAdmin","useState","users","setUsers","userId","setUserId","userDetail","setUserDetail","modalDetail","setModalDetail","modal","setModal","modalType","setModalType","modalMessage","setModalMessage","modalButtonText","setModalBmodalButtonText","alertType","setAlertType","alertMessage","setAlertMessage","userButtonHandler","item","getAlluser","then","res","filteredUsers","data","rows","filter","isApproved","isVerified","useEffect","xl","style","backgroundColor","color","fontWeight","borderRadius","marginTop","closeButton","items","fields","bordered","itemsPerPage","pagination","scopedSlots","action","shape","size","className","onClick","show","onClose","catch","width","src","avatar","alt","username"],"mappings":"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","file":"static/js/7.896b2b67.chunk.js","sourcesContent":["import arrayWithHoles from \"@babel/runtime/helpers/esm/arrayWithHoles\";\nimport iterableToArrayLimit from \"@babel/runtime/helpers/esm/iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableRest from \"@babel/runtime/helpers/esm/nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","export const UserAttendanceData = [\n  {\n    id: 0,\n    checkIn: \"08:20\",\n    date: \"2018/01/01\",\n    checkOut: \"17:00\",\n    workingHour: \"7 Hours\"\n  },\n  {\n    id: 1,\n    checkIn: \"08:00\",\n    date: \"2018/01/01\",\n    checkOut: \"17:50\",\n    workingHour: \"8 Hours\"\n  },\n  {\n    id: 2,\n    checkIn: \"08:03\",\n    date: \"2018/02/01\",\n    checkOut: \"17:50\",\n    workingHour: \"9 Hours\"\n  },\n  {\n    id: 3,\n    checkIn: \"08:15\",\n    date: \"2018/02/01\",\n    checkOut: \"16:00\",\n    workingHour: \"7 Hours\"\n  }\n];\n\nexport const UsersAttendanceData = [\n  {\n    id: 0,\n    date: \"2018/02/01\",\n    name: \"user1\",\n    type: \"Check-In\",\n    time: \"08:00\"\n  },\n  {\n    id: 1,\n    date: \"2018/02/01\",\n    name: \"user2\",\n    type: \"Check-In\",\n    time: \"08:00\"\n  },\n  {\n    id: 2,\n    date: \"2018/02/01\",\n    name: \"user3\",\n    type: \"Check-In\",\n    time: \"08:00\"\n  },\n  {\n    id: 4,\n    date: \"2018/02/01\",\n    name: \"user1\",\n    type: \"Check-Out\",\n    time: \"17:10\"\n  },\n  {\n    id: 5,\n    date: \"2018/02/01\",\n    name: \"user2\",\n    type: \"Check-Out\",\n    time: \"17:12\"\n  },\n  {\n    id: 6,\n    date: \"2018/02/01\",\n    name: \"user3\",\n    type: \"Check-Out\",\n    time: \"17:01\"\n  }\n];\n\nexport const ApproveUsersData = [\n  {\n    id: 0,\n    name: \"user1\",\n    email: \"admin@gmail.com\"\n  },\n  {\n    id: 1,\n    name: \"user2\",\n    email: \"test@gmail.com\"\n  },\n  {\n    id: 2,\n    name: \"user3\",\n    email: \"user1@gmail.com\"\n  },\n  {\n    id: 3,\n    name: \"user4\",\n    email: \"user2@gmail.com\"\n  },\n  {\n    id: 4,\n    name: \"user5\",\n    email: \"admin@gmail.com\"\n  },\n  {\n    id: 5,\n    name: \"user1\",\n    email: \"test@gmail.com\"\n  }\n];\n","export default function authHeader() {\n  const user = JSON.parse(localStorage.getItem(\"user\"));\n\n  if (user && user.token) {\n    return { \"x-token\": user.token };\n  } else {\n    return {};\n  }\n}\n","import authHeader from \"./auth.header\";\nconst axios = require(\"axios\");\n\nconst API_URL = \"https://ipe-attendance.herokuapp.com/api/admin/\";\n\nconst getAllUsers = () => {\n  return axios.get(API_URL + \"get-user\", { headers: authHeader() });\n};\n\nconst approveUser = verifiedToken => {\n  return axios.get(API_URL + \"approve-user/\" + verifiedToken, {\n    headers: authHeader()\n  });\n};\n\nconst deleteUser = id => {\n  return axios.delete(API_URL + \"delete-user/\" + id, {\n    headers: authHeader()\n  });\n};\n\nconst UserServices = {\n  getAllUsers,\n  approveUser,\n  deleteUser\n};\n\nexport default UserServices;\n","import React, { useState, useEffect } from \"react\";\nimport {\n  CCard,\n  CCardBody,\n  CCardHeader,\n  CCol,\n  CDataTable,\n  CRow,\n  CButton,\n  CModal,\n  CModalBody,\n  CModalFooter,\n  CAlert,\n  CImg,\n} from \"@coreui/react\";\n\nimport { ApproveUsersData } from \"../../../data/Attendance\";\nimport UserServices from \"../../../../services/user.services\";\n\nconst userFields = [\"username\", \"action\"];\nconst absentFields = [\"name\", \"absent\", \"action\"];\n\nconst DashboardAdmin = () => {\n  const [users, setUsers] = useState(null);\n  const [userId, setUserId] = useState(null);\n\n  const [userDetail, setUserDetail] = useState({});\n\n  // modal detail\n  const [modalDetail, setModalDetail] = useState(false);\n\n  // modal reset and delete\n  const [modal, setModal] = useState(false);\n  const [modalType, setModalType] = useState(\"\");\n  const [modalMessage, setModalMessage] = useState(\"\");\n  const [modalButtonText, setModalBmodalButtonText] = useState(\"\");\n\n  const [alertType, setAlertType] = useState(null);\n  const [alertMessage, setAlertMessage] = useState(null);\n\n  const modalDetailHandler = (data) => {\n    setModalDetail(!modalDetail);\n    setUserDetail(data);\n  };\n\n  const userButtonHandler = (type, item) => {\n    setModal(!modal);\n    setUserId(item.id);\n    if (type === \"danger\") {\n      setModalMessage(\"Delete this user?\");\n      setModalType(\"danger\");\n      setModalBmodalButtonText(\"Reset\");\n    } else {\n      setModalMessage(\"Reset user location?\");\n      setModalType(\"warning\");\n      setModalBmodalButtonText(\"Reset\");\n    }\n  };\n\n  const deleteResetHandler = () => {\n    setModal(!modal);\n    if (modalType === \"danger\") {\n      UserServices.deleteUser(userId)\n        .then((res) => {\n          setAlertType(\"success\");\n          setAlertMessage(\"User deleted successfully\");\n          getAlluser();\n        })\n        .catch((err) => {\n          setAlertType(\"success\");\n          setAlertMessage(\"User failed to delete\");\n        });\n    }\n  };\n\n  const getAlluser = () => {\n    UserServices.getAllUsers().then((res) => {\n      const users = res.data.data.users.rows;\n      const filteredUsers = users.filter(\n        (user) => user.isApproved === true && user.isVerified === true\n      );\n      setUsers(filteredUsers);\n    });\n  };\n\n  useEffect(() => {\n    getAlluser();\n  }, []);\n\n  return (\n    <>\n      <CRow>\n        <CCol xl={6}>\n          <CCard>\n            <CCardHeader\n              style={{\n                backgroundColor: \"#6C63FF\",\n                color: \"white\",\n                fontWeight: \"600\",\n                borderRadius: \"10px 10px 0 0\",\n                marginTop: \"-10px\",\n              }}\n            >\n              Users\n            </CCardHeader>\n            <CCardBody>\n              {alertType && (\n                <CAlert color={alertType} closeButton>\n                  {alertMessage}\n                </CAlert>\n              )}\n              <CDataTable\n                items={users}\n                fields={userFields}\n                bordered\n                itemsPerPage={5}\n                pagination\n                scopedSlots={{\n                  action: (item) => (\n                    <td>\n                      <CButton\n                        shape=\"pill\"\n                        color=\"info\"\n                        size=\"sm\"\n                        className=\"mx-1 px-3\"\n                        onClick={() => modalDetailHandler(item)}\n                      >\n                        Detail\n                      </CButton>\n                      <CButton\n                        shape=\"pill\"\n                        color=\"warning\"\n                        size=\"sm\"\n                        className=\"mx-1 px-3\"\n                        onClick={() => userButtonHandler(\"warning\", item)}\n                      >\n                        Reset Location\n                      </CButton>\n                      <CButton\n                        shape=\"pill\"\n                        color=\"danger\"\n                        size=\"sm\"\n                        className=\"mx-1 px-3\"\n                        onClick={() => userButtonHandler(\"danger\", item)}\n                      >\n                        Delete\n                      </CButton>\n                    </td>\n                  ),\n                }}\n              />\n            </CCardBody>\n          </CCard>\n        </CCol>\n        <CCol xl={6}>\n          <CCard>\n            <CCardHeader\n              style={{\n                backgroundColor: \"#6C63FF\",\n                color: \"white\",\n                fontWeight: \"600\",\n                borderRadius: \"10px 10px 0 0\",\n                marginTop: \"-10px\",\n              }}\n            >\n              Absent more than 2 days this month\n            </CCardHeader>\n            <CCardBody>\n              <CDataTable\n                items={ApproveUsersData}\n                fields={absentFields}\n                bordered\n                itemsPerPage={5}\n                pagination\n                scopedSlots={{\n                  action: (item) => (\n                    <td>\n                      <CButton\n                        shape=\"pill\"\n                        color=\"info\"\n                        size=\"sm\"\n                        className=\"mx-1 px-3\"\n                      >\n                        Detail\n                      </CButton>\n                    </td>\n                  ),\n                }}\n              />\n            </CCardBody>\n          </CCard>\n        </CCol>\n      </CRow>\n\n      {/* Modal Reset and Delete */}\n      <CModal\n        size=\"sm\"\n        show={modal}\n        onClose={() => setModal(!modal)}\n        color={modalType}\n      >\n        <CModalBody className={`text-${modalType} text-center`}>\n          <h4>{modalMessage}</h4>\n        </CModalBody>\n        <CModalFooter>\n          <CButton color={modalType} onClick={() => deleteResetHandler()}>\n            {modalButtonText}\n          </CButton>{\" \"}\n          <CButton color=\"secondary\" onClick={() => setModal(!modal)}>\n            Cancel\n          </CButton>\n        </CModalFooter>\n      </CModal>\n\n      {/* Modal detail */}\n      <CModal\n        size=\"sm\"\n        show={modalDetail}\n        onClose={() => setModalDetail(!modalDetail)}\n      >\n        <CModalBody className=\"text-center\">\n          <CImg\n            style={{ width: \"200px\" }}\n            className=\"c-avatar-img\"\n            src={\"avatars/\" + userDetail.avatar}\n            alt=\"user-avatar\"\n          />\n          <h4>{userDetail.username}</h4>\n          <p>{userDetail.email}</p>\n        </CModalBody>\n        <CModalFooter>\n          <CButton\n            color=\"secondary\"\n            onClick={() => setModalDetail(!modalDetail)}\n          >\n            Close\n          </CButton>\n        </CModalFooter>\n      </CModal>\n    </>\n  );\n};\n\nexport default DashboardAdmin;\n"],"sourceRoot":""}